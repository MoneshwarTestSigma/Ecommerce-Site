{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Logged In successfully \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \"Email Must be Valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \"Password can't be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Invalid creditals \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/signup\"];\n};\nexport class LoginComponent {\n  constructor() {\n    this.loginStatus = false;\n    this.isClicked = false;\n    this.form = {\n      email: '',\n      password: ''\n    };\n  }\n  change() {\n    this.isClicked = true;\n  }\n  check() {\n    for (var key in localStorage) {\n      let temp = JSON.parse(localStorage.getItem(key) || \"\");\n      if (temp.email == this.form.email && temp.password == this.form.password) {\n        alert(\"Welcome  \" + temp.name);\n        this.loginStatus = true;\n        break;\n      }\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 26,\n  vars: 8,\n  consts: [[1, \"row\"], [1, \"col-md-4\", \"offset-md-4\", \"col-sm-6\", \"offset-sm-3\"], [1, \"card\", \"auth\"], [4, \"ngIf\"], [1, \"card-body\", \"auth-card\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"text-center\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-my\", 3, \"click\"], [1, \"text-center\", \"sign-up\"], [3, \"routerLink\"], [2, \"color\", \"red\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.check();\n      });\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 7);\n      i0.ɵɵtext(8, \"Email : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.form.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"Password : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.form.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 14)(19, \"input\", 15);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_input_click_19_listener() {\n        return ctx.change();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementStart(21, \"div\", 16);\n      i0.ɵɵtext(22, \" Don`t have an account ? \");\n      i0.ɵɵelementStart(23, \"a\", 17);\n      i0.ɵɵtext(24, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \" here!!. \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(10);\n      const _r3 = i0.ɵɵreference(16);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginStatus);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.form.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.form.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginStatus && ctx.isClicked);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n    }\n  },\n  dependencies: [i1.NgIf, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\".text-right.forget-pass[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{\\r\\n    font-size: 12px;\\r\\n    color: #d39e00;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  .sign-up[_ngcontent-%COMP%]{\\r\\n    color: #fff;\\r\\n  }\\r\\n  .sign-up[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{\\r\\n    color: #d39e00;\\r\\n    font-weight: 600;\\r\\n    text-decoration: none;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvV2ViY29tcG9uZW50L2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLHFCQUFxQjtFQUN2QjtFQUNBO0lBQ0UsV0FBVztFQUNiO0VBQ0E7SUFDRSxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtFQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LXJpZ2h0LmZvcmdldC1wYXNzIGF7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBjb2xvcjogI2QzOWUwMDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcbiAgLnNpZ24tdXB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgLnNpZ24tdXAgYXtcclxuICAgIGNvbG9yOiAjZDM5ZTAwO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAGQA,2BAAyB;IACvBA,wCACF;IAAAA,iBAAM;;;;;IAOFA,+BAAiF;IAAAA,mCAAmB;IAAAA,iBAAM;;;;;IAIxGA,+BAA0F;IAAAA,uCAAuB;IAAAA,iBAAM;;;;;IAM3HA,2BAAuC;IACrCA,mCACF;IAAAA,iBAAM;;;;;;AChBhB,OAAM,MAAOC,cAAc;EAL3BC;IAME,gBAAW,GAAC,KAAK;IACjB,cAAS,GAAC,KAAK;IACd,SAAI,GAAY;MACdC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;;EACDC,MAAM;IAEH,IAAI,CAACC,SAAS,GAAC,IAAI;EACtB;EACAC,KAAK;IAEJ,KAAI,IAAIC,GAAG,IAAIC,YAAY,EAAE;MAC3B,IAAIC,IAAI,GAAEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACI,OAAO,CAACL,GAAG,CAAC,IAAG,EAAE,CAAC;MACpD,IAAGE,IAAI,CAACP,KAAK,IAAE,IAAI,CAACW,IAAI,CAACX,KAAK,IAAIO,IAAI,CAACN,QAAQ,IAAE,IAAI,CAACU,IAAI,CAACV,QAAQ,EACnE;QACEW,KAAK,CAAC,WAAW,GAAEL,IAAI,CAACM,IAAI,CAAC;QAC7B,IAAI,CAACC,WAAW,GAAE,IAAI;QACtB;;;EAGL;;AAtBUhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR3BtB,8BAAiB;MAGTA,+DAEM;MACNA,8BAAiC;MACzBA;QAAA,OAAYuB,WAAO;MAAA,EAAC;MACxBvB,8BAAwB;MACHA,wBAAQ;MAAAA,iBAAQ;MACnCA,mCAA4H;MAAnDA;QAAA;MAAA,EAAwB;MAAjGA,iBAA4H;MAE9HA,kEAA0G;MAC1GA,+BAAwB;MACAA,4BAAW;MAAAA,iBAAQ;MACzCA,sCAA4I;MAAzDA;QAAA;MAAA,EAA2B;MAA9GA,iBAA4I;MAC5IA,kEAAuH;MACvHA,iBAAM;MACRA,gCAAyB;MAC+BA;QAAA,OAASuB,YAAQ;MAAA,EAAC;MAAxEvB,iBAAyE;MAG7EA,iEAEM;MACNA,gCAAiC;MAC/BA,0CAAwB;MAAAA,8BAA8B;MAAAA,wBAAO;MAAAA,iBAAI;MAACA,0BACpE;MAAAA,iBAAM;;;;;MAxBFA,eAAiB;MAAjBA,sCAAiB;MAOwDA,eAAwB;MAAxBA,wCAAwB;MAE7FA,eAAqD;MAArDA,gEAAqD;MAG0BA,eAA2B;MAA3BA,2CAA2B;MACxGA,eAA8D;MAA9DA,gEAA8D;MAMlEA,eAA+B;MAA/BA,wDAA+B;MAIRA,eAA0B;MAA1BA,uDAA0B","names":["i0","LoginComponent","constructor","email","password","change","isClicked","check","key","localStorage","temp","JSON","parse","getItem","form","alert","name","loginStatus","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\moneshwar\\Desktop\\Ecommerce\\Angular\\ecommerce\\src\\app\\Webcomponent\\login\\login.component.html","C:\\Users\\moneshwar\\Desktop\\Ecommerce\\Angular\\ecommerce\\src\\app\\Webcomponent\\login\\login.component.ts"],"sourcesContent":["<div class=\"row\">\n    <div class=\"col-md-4 offset-md-4 col-sm-6 offset-sm-3\">\n      <div class=\"card auth\">\n        <div *ngIf=\"loginStatus\">\n          Logged In successfully\n        </div>\n        <div class=\"card-body auth-card\">\n          <form (ngSubmit)=\"check()\">  \n            <div class=\"form-group\">\n              <label for=\"email\">Email : </label>\n              <input type=\"text\" name=\"email\" class=\"form-control\" placeholder=\"Email\" [(ngModel)]=\"form.email\" #email=\"ngModel\" required>\n            </div>\n            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" style=\"color: red;\">Email Must be Valid</div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password : </label>\n              <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\" required>\n              <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" style=\"color: red;\">Password can't be empty</div>\n              </div>\n            <div class=\"text-center\">\n              <input type=\"submit\" class=\"btn btn-my\" value=\"Login\" (click)=\"change()\">\n            </div>\n          </form>\n          <div *ngIf=\"!loginStatus && isClicked\">\n            Invalid creditals\n          </div>\n          <div class=\"text-center sign-up\">\n            Don`t have an account ? <a [routerLink]=\"['/signup']\">Sign Up</a> here!!.\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component } from '@angular/core';\nimport { LoginType } from '../datatypes/LoginType';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginStatus=false;\n  isClicked=false;\n   form: LoginType={\n     email: '',\n     password: ''\n   };\n   change()\n   {\n      this.isClicked=true;\n   }\n   check()\n   {\n    for(var key in localStorage) {\n      let temp =JSON.parse(localStorage.getItem(key)|| \"\");\n      if(temp.email==this.form.email && temp.password==this.form.password)\n      {\n        alert(\"Welcome  \"+ temp.name);\n        this.loginStatus= true;\n        break;\n      }      \n   }\n   }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}